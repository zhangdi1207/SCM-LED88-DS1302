C51 COMPILER V8.06   FLASHOPERTION                                                         01/31/2018 17:46:39 PAGE 1   


C51 COMPILER V8.06, COMPILATION OF MODULE FLASHOPERTION
OBJECT MODULE PLACED IN flashOpertion.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE flashOpertion.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include"head.h"
   2          
   3          
   4          void IapIdle()
   5          {
   6   1              IAP_CONTR = 0;         //使能IAP
   7   1          IAP_CMD = 0; 
   8   1              IAP_TRIG = 0;            //设置IAP命令
   9   1          IAP_ADDRH = 0x80;          //设置IAP高地址
  10   1              IAP_ADDRL = 0;               //设置IAP低地址
  11   1      }
  12          
  13          
  14          uchar IapReadByte(uint addr)
  15          {
  16   1          uchar dat;                       //数据缓冲区
  17   1          IAP_CONTR = ENABLE_IAP;         //使能IAP
  18   1          IAP_CMD = CMD_READ;             //设置IAP命令
  19   1          IAP_ADDRL = addr;               //设置IAP低地址
  20   1          IAP_ADDRH = addr >> 8;          //设置IAP高地址
  21   1          IAP_TRIG = 0x5a;                //写触发命令(0x5a)
  22   1          IAP_TRIG = 0xa5;                //写触发命令(0xa5)
  23   1          Delay40us();                        //等待ISP/IAP/EEPROM操作完成
  24   1          dat = IAP_DATA;                 //读ISP/IAP/EEPROM数据
  25   1          IapIdle();                                            /*加上这行后EEPROM操作无效*/
  26   1          return dat;                     //返回
  27   1      }
  28          /*----------------------------
  29          写一字节数据到ISP/IAP/EEPROM区域
  30          addr:要写入的地址
  31          dat:要写入的数据
  32          ----------------------------*/
  33          void IapProgramByte(uint addr,uchar dat)
  34          {
  35   1          IAP_CONTR = ENABLE_IAP;         //使能IAP
  36   1          IAP_CMD = CMD_PROGRAM;          //设置IAP命令
  37   1          IAP_ADDRL = addr;               //设置IAP低地址
  38   1          IAP_ADDRH = addr >> 8;          //设置IAP高地址
  39   1          IAP_DATA = dat;                 //写ISP/IAP/EEPROM数据
  40   1          IAP_TRIG = 0x5a;                //写触发命令(0x5a)
  41   1          IAP_TRIG = 0xa5;                //写触发命令(0xa5)
  42   1          Delay40us();                        //等待ISP/IAP/EEPROM操作完成
  43   1      
  44   1          IapIdle();                                            /*加上这行后EEPROM操作无效*/
  45   1      }
  46          /*----------------------------
  47          扇区擦除 某一地址addr的数据
  48          ----------------------------*/
  49          void IapEraseSector(uint addr)
  50          {
  51   1          IAP_CONTR = ENABLE_IAP;         //使能IAP
  52   1          IAP_CMD = CMD_ERASE;            //设置IAP命令
  53   1          IAP_ADDRL = addr;               //设置IAP低地址
  54   1          IAP_ADDRH = addr >> 8;          //设置IAP高地址
  55   1          IAP_TRIG = 0x5a;                //写触发命令(0x5a)
C51 COMPILER V8.06   FLASHOPERTION                                                         01/31/2018 17:46:39 PAGE 2   

  56   1          IAP_TRIG = 0xa5;                //写触发命令(0xa5)
  57   1          Delay40us();                        //等待ISP/IAP/EEPROM操作完成
  58   1                                                                      
  59   1          IapIdle();                                        /*加上这行后EEPROM操作无效*/
  60   1      }
  61          
  62          uint eepromInit()
  63          {
  64   1              uint month=1;
  65   1              uchar mH,mL;
  66   1              mH = IapReadByte(MONTH_DATA+1);
  67   1              mL = IapReadByte(MONTH_DATA);
  68   1              month = mH * 256 + mL;
  69   1              if(month>1023 ||month ==0)
  70   1              {
  71   2                      month=1;
  72   2                      IapEraseSector(MONTH_DATA);
  73   2                      IapProgramByte(MONTH_DATA+1,0);
  74   2                      IapProgramByte(MONTH_DATA,1);
  75   2              }
  76   1      
  77   1              return month;
  78   1      }
  79          
  80          void flashMonthChange(uint month)
  81          {
  82   1              uchar mH,mL;
  83   1              mH = month/256;
  84   1              mL = month%256;
  85   1              IapEraseSector(MONTH_DATA);
  86   1              IapProgramByte(MONTH_DATA+1,mH);
  87   1              IapProgramByte(MONTH_DATA,mL);
  88   1      }
  89          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    199    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       5
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
