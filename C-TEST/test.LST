C51 COMPILER V8.06   TEST                                                                  02/07/2018 22:11:14 PAGE 1   


C51 COMPILER V8.06, COMPILATION OF MODULE TEST
OBJECT MODULE PLACED IN test.OBJ
COMPILER INVOKED BY: D:\Program Files\keil\C51\BIN\C51.EXE test.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include <reg52.h>
   2          #include <intrins.h>
   3          #define nop() _nop_()
   4          #define uchar unsigned char
   5          #define uint unsigned int
   6          #define ul unsigned long
   7          #define CMD_IDLE    0               //空闲模式
   8          #define CMD_READ    1               //IAP字节读命令
   9          #define CMD_PROGRAM 2               //IAP字节编程命令
  10          #define CMD_ERASE   3  
  11          #define ENABLE_IAP  0x82            //if SYSCLK<20MHz
  12          #define MONTH_DATA 0x0000
  13          #define WDT                     0x35                    //看门狗初始化@12MHz，2.9071s
  14          //DS1302寄存器定义
  15          #define WRITE_SEC        0X80
  16          #define WRITE_MIN        0X82
  17          #define WRITE_HOU        0X84
  18          #define WRITE_DAT        0X86
  19          #define WRITE_MON        0X88
  20          #define WRITE_YEA        0X8C
  21          
  22          #define READ_SEC         0x81
  23          #define READ_MIN         0x83
  24          #define READ_HOU         0x85
  25          #define READ_DAT         0x87
  26          #define WRITE_PROTECT 0X8E
  27          
  28          
  29          //初始化年月日等时间值
  30          #define OR_YEA 00
  31          #define OR_MON 01
  32          #define OR_DAT 01
  33          #define OR_HOU 00
  34          #define OR_MIN 00
  35          #define OR_SEC 00
  36          
  37          #define SHOWPRA 100000 //显示多少次统计一下时间
  38          
  39          #define TESTFLAG 1
  40          
  41          
  42          sfr AUXR        =   0x8e;
  43          sfr IAP_DATA    =   0xC2;           //IAP数据寄存器
  44          sfr IAP_ADDRH   =   0xC3;           //IAP地址寄存器高字节
  45          sfr IAP_ADDRL   =   0xC4;           //IAP地址寄存器低字节
  46          sfr IAP_CMD     =   0xC5;           //IAP命令寄存器
  47          sfr IAP_TRIG    =   0xC6;           //IAP命令触发寄存器
  48          sfr IAP_CONTR   =   0xC7;           //IAP控制寄存器
  49          sfr CLK_DIV = 0x97;                                     //时钟命令寄存器
  50          sfr WDT_CONTR = 0xc1;
  51          
  52          //行列数据74HC595
  53          sbit SHCP = P3^0;
  54          sbit STCP = P3^1;
  55          sbit ROW0D = P3^2;
C51 COMPILER V8.06   TEST                                                                  02/07/2018 22:11:14 PAGE 2   

  56          sbit COL0D = P3^3;
  57          sbit ROW1D = P3^6;
  58          sbit ROW2D = P3^7;
  59          sbit ROW3D = P1^3;
  60          sbit COL1D = P1^4;
  61          sbit COL2D = P1^5;
  62          sbit COL3D = P1^6;
  63          
  64          //按键
  65          sbit BUTTON = P1^7;
  66          
  67          
  68          
  69          //DS1302数据线
  70          sbit DS1302RST = P1^0;
  71          sbit DS1302CLK = P1^1;
  72          sbit DS1302IO = P1^2;
  73          
  74          //数据
  75          uchar row595[4]={0,0,0,0};
  76          uchar column595[4]={0,0,0,0};
  77          
  78          
  79          
  80          uchar read1302(uchar addr)       //BCD??
  81          {
  82   1              uchar i,temp;
  83   1              DS1302RST=0;
  84   1              DS1302CLK=0;
  85   1              DS1302RST=1;
  86   1              for(i=8;i>0;i--)
  87   1              {
  88   2                      DS1302CLK=0;
  89   2                      DS1302IO=(bit)(addr&0x01);
  90   2                      DS1302CLK=1;
  91   2                      addr>>=1;
  92   2              }
  93   1              temp=0;
  94   1              nop();
  95   1              nop();
  96   1              for(i=8;i>0;i--)
  97   1              {  
  98   2                      temp>>=1;
  99   2                      DS1302CLK=0;            
 100   2                      if(DS1302IO)
 101   2                      {
 102   3                              temp=temp|0x80;
 103   3                      }
 104   2                      DS1302CLK=1;
 105   2      
 106   2              }
 107   1              DS1302RST=0;
 108   1              DS1302CLK=1;
 109   1              DS1302IO=0;
 110   1              DS1302IO=1;
 111   1              return temp;
 112   1      }
 113          
 114          void longToRow(ul dat,uchar arr[4])
 115          {
 116   1              arr[0]=dat;
 117   1              arr[1]=dat>>8;
C51 COMPILER V8.06   TEST                                                                  02/07/2018 22:11:14 PAGE 3   

 118   1              arr[2]=dat>>16;
 119   1              arr[3]=dat>>24;                                           
 120   1      }
 121          
 122          void changeFor788AS()
 123          {
 124   1              uchar i,left,right;
 125   1              left=0;
 126   1              right=0;
 127   1              for(i=0;i<4;i++)
 128   1              {
 129   2                      if(row595[i]&0x01)              //1->9
 130   2                              right=right|0x80;
 131   2                      if(row595[i]&0x02)         //2->14
 132   2                              right=right|0x04;
 133   2                      if(row595[i]&0x04)        //3->8
 134   2                              left=left|0x01; 
 135   2                      if(row595[i]&0x08)        //4->12
 136   2                              right=right|0x10;
 137   2                      if(row595[i]&0x10)        //5->1
 138   2                              left=left|0x80;
 139   2                      if(row595[i]&0x20)        //6->7
 140   2                              left=left|0x02;
 141   2                      if(row595[i]&0x40)        //7->2
 142   2                              left=left|0x40;
 143   2                      if(row595[i]&0x80)        //8->5
 144   2                              left=left|0x08;
 145   2      
 146   2                      if(column595[i]&0x01)     //1->13
 147   2                              right=right|0x08;
 148   2                      if(column595[i]&0x02)     //2->3
 149   2                              left=left|0x20;
 150   2                      if(column595[i]&0x04)     //3->4
 151   2                              left=left|0x10;
 152   2                      if(column595[i]&0x08)     //4->10
 153   2                              right=right|0x40;
 154   2                      if(column595[i]&0x10)     //5->6
 155   2                              left=left|0x04;
 156   2                      if(column595[i]&0x20)     //6->11
 157   2                              right=right|0x20;
 158   2                      if(column595[i]&0x40)     //7->15
 159   2                              right=right|0x02;
 160   2                      if(column595[i]&0x80)     //8->16
 161   2                              right=right|0x01;
 162   2              }
 163   1      }
 164          
 165          void select(ul row,ul column)
 166          {
 167   1              int i;
 168   1              longToRow(row,row595);
 169   1              longToRow(column,column595);
 170   1              changeFor788AS();
 171   1              for(i=7;i>=0;i--)
 172   1              {
 173   2      
 174   2                      ROW0D=row595[0]&0x01;
 175   2                      COL0D=column595[0]&0x01;
 176   2                      ROW1D=row595[1]&0x01;
 177   2                      COL1D=column595[1]&0x01;
 178   2                      ROW2D=row595[2]&0x01;
 179   2                      COL2D=column595[2]&0x01;
C51 COMPILER V8.06   TEST                                                                  02/07/2018 22:11:14 PAGE 4   

 180   2                      ROW3D=row595[3]&0x01;
 181   2                      COL3D=column595[3]&0x01;
 182   2                      SHCP=0;
 183   2                      nop();
 184   2                      SHCP=1;
 185   2              }
 186   1              STCP=0;
 187   1              nop();
 188   1              nop();
 189   1              STCP=1;
 190   1      }
 191          
 192          void show(uint signalMonth)
 193          {
 194   1              uchar row,column,i; 
 195   1              ul rlist=0,clist=0; 
 196   1              uint myMonth;
 197   1              myMonth=signalMonth;
 198   1              row = myMonth/32;
 199   1              column = myMonth%32;
 200   1              /*
 201   1              for(i=0;i<row;i++)
 202   1              {
 203   1                      rlist=1;
 204   1                      rlist = rlist<<i;
 205   1                      select(~rlist,0xffff);
 206   1                      select(~rlist,0xffff0000);
 207   1              }
 208   1              for(i=0;i<column;i++)
 209   1              {
 210   1                      clist<<=1;
 211   1                      clist |= 0x01;
 212   1              }
 213   1              rlist=1;
 214   1              rlist=rlist<<row;
 215   1              select(~rlist,clist&0xffff);
 216   1              select(~rlist,clist&0xffff0000);
 217   1              //*/
 218   1              select(0x0,0xffffffff);
 219   1      
 220   1      }
*** WARNING C280 IN LINE 194 OF TEST.C: 'i': unreferenced local variable
 221          
 222          
 223          void main()
 224          {
 225   1              uint monthCount;
 226   1              uchar i,j;
 227   1              while(1)
 228   1              {
 229   2                      for(i=0;i<128;i++)
 230   2                      {
 231   3                              if(i%32 > 7)
 232   3                                      continue;
 233   3                              P2=read1302(READ_SEC);
 234   3                              monthCount=i;
 235   3                              j=100;
 236   3                              while(j--)
 237   3                                      show(monthCount);
 238   3                      }
 239   2                      //monthSet();   
 240   2              }
C51 COMPILER V8.06   TEST                                                                  02/07/2018 22:11:14 PAGE 5   

 241   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    466    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      8      27
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
